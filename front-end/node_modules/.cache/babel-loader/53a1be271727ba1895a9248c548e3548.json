{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={searchWord:\"추천\",orderCommand:\"date\"};export var searchSlice=createSlice({name:\"search\",initialState:initialState,reducers:{setSearchWordTK:function setSearchWordTK(state,action){state.searchWord=action.payload;},setOrderCommandTK:function setOrderCommandTK(state,action){state.orderCommand=action.payload;}}});var _searchSlice$actions=searchSlice.actions,setSearchWordTK=_searchSlice$actions.setSearchWordTK,setOrderCommandTK=_searchSlice$actions.setOrderCommandTK;export{setSearchWordTK,setOrderCommandTK};export var selectWord=function selectWord(state){return state.searchState.searchWord;};export default searchSlice.reducer;","map":{"version":3,"sources":["/Users/jun/Desktop/Back-Git/개인 프로젝트/SNS-APP/front-end/src/redux/dataSlice.ts"],"names":["createSlice","initialState","searchWord","orderCommand","searchSlice","name","reducers","setSearchWordTK","state","action","payload","setOrderCommandTK","actions","selectWord","searchState","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAQA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,IADO,CAEnBC,YAAY,CAAE,MAFK,CAArB,CAKA,MAAO,IAAMC,CAAAA,WAAW,CAAGJ,WAAW,CAAC,CACrCK,IAAI,CAAE,QAD+B,CAErCJ,YAAY,CAAZA,YAFqC,CAGrCK,QAAQ,CAAE,CACRC,eAAe,CAAE,yBAACC,KAAD,CAAQC,MAAR,CAA0C,CACzDD,KAAK,CAACN,UAAN,CAAmBO,MAAM,CAACC,OAA1B,CACD,CAHO,CAIRC,iBAAiB,CAAE,2BAACH,KAAD,CAAQC,MAAR,CAA0C,CAC3DD,KAAK,CAACL,YAAN,CAAqBM,MAAM,CAACC,OAA5B,CACD,CANO,CAH2B,CAAD,CAA/B,CAaA,yBAA+CN,WAAW,CAACQ,OAA3D,CAAQL,eAAR,sBAAQA,eAAR,CAAyBI,iBAAzB,sBAAyBA,iBAAzB,C,0CAEP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,KAAD,QAAsBA,CAAAA,KAAK,CAACM,WAAN,CAAkBZ,UAAxC,EAAnB,CAEP,cAAeE,CAAAA,WAAW,CAACW,OAA3B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport type { RootState } from \"../store\";\n\ninterface searchWordState {\n  searchWord: string;\n  orderCommand: string;\n}\n\nconst initialState = {\n  searchWord: \"추천\",\n  orderCommand: \"date\",\n} as searchWordState;\n\nexport const searchSlice = createSlice({\n  name: \"search\",\n  initialState,\n  reducers: {\n    setSearchWordTK: (state, action: PayloadAction<string>) => {\n      state.searchWord = action.payload;\n    },\n    setOrderCommandTK: (state, action: PayloadAction<string>) => {\n      state.orderCommand = action.payload;\n    },\n  },\n});\n\nexport const { setSearchWordTK, setOrderCommandTK } = searchSlice.actions;\n\nexport const selectWord = (state: RootState) => state.searchState.searchWord;\n\nexport default searchSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}