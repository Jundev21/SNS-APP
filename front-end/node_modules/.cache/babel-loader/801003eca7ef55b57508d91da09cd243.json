{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/Front-Git/bunjang/src/components/login/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalWrapper = styled.div`\n    display: ${props => props.isOpen ? 'block' : 'none'};\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n_c = ModalWrapper;\nconst ModalContent = styled.div`\n    background-color: white;\n    width: 50%;\n    max-width: 400px;\n    margin: 100px auto;\n    padding: 20px;\n    border-radius: 8px;\n    position: relative;\n`;\n_c2 = ModalContent;\nconst CloseButton = styled.span`\n    color: #aaa;\n    font-size: 20px;\n    position: absolute;\n    top: 10px;\n    right: 15px;\n    cursor: pointer;\n`;\n_c3 = CloseButton;\n\nconst Modal = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openModal,\n        children: \"\\uBAA8\\uB2EC \\uC5F4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalWrapper, {\n        isOpen: isOpen,\n        children: /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uBAA8\\uB2EC \\uB0B4\\uC6A9\\uC774 \\uC5EC\\uAE30\\uC5D0 \\uB4E4\\uC5B4\\uAC11\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Modal, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c4 = Modal;\nexport default LoginModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ModalWrapper\");\n$RefreshReg$(_c2, \"ModalContent\");\n$RefreshReg$(_c3, \"CloseButton\");\n$RefreshReg$(_c4, \"Modal\");","map":{"version":3,"sources":["/Users/jun/Desktop/Front-Git/bunjang/src/components/login/LoginModal.js"],"names":["React","useState","styled","ModalWrapper","div","props","isOpen","ModalContent","CloseButton","span","Modal","setIsOpen","openModal","closeModal","LoginModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAI;AAChC,eAAeC,KAAK,IAAKA,KAAK,CAACC,MAAN,GAAe,OAAf,GAAyB,MAAQ;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMH,Y;AAUN,MAAMI,YAAY,GAAGL,MAAM,CAACE,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMG,Y;AAUN,MAAMC,WAAW,GAAGN,MAAM,CAACO,IAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,W;;AASN,MAAME,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACJ,MAAD,EAASK,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMW,SAAS,GAAG,MAAM;AACpBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,QAAME,UAAU,GAAG,MAAM;AACrBF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFD;;AAGA,sBACI;AAAA,2BACA;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEN,MAAtB;AAAA,+BACI,QAAC,YAAD;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEO,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAYH,CAtBD;;GAAMH,K;;MAAAA,K;AAyBN,eAAeI,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nconst ModalWrapper = styled.div`\n    display: ${props => (props.isOpen ? 'block' : 'none')};\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n    background-color: white;\n    width: 50%;\n    max-width: 400px;\n    margin: 100px auto;\n    padding: 20px;\n    border-radius: 8px;\n    position: relative;\n`;\n\nconst CloseButton = styled.span`\n    color: #aaa;\n    font-size: 20px;\n    position: absolute;\n    top: 10px;\n    right: 15px;\n    cursor: pointer;\n`;\n\nconst Modal = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const openModal = () => {\n        setIsOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsOpen(false);\n    };\n    return (\n        <>\n        <div>\n            <button onClick={openModal}>모달 열기</button>\n            <ModalWrapper isOpen={isOpen}>\n                <ModalContent>\n                    <CloseButton onClick={closeModal}>&times;</CloseButton>\n                    <p>모달 내용이 여기에 들어갑니다.</p>\n                </ModalContent>\n            </ModalWrapper>\n        </div>\n    </>)\n}\n\n\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}