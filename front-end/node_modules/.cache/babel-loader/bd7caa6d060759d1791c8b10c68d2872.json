{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  searchWord: \"추천\",\n  orderCommand: \"date\"\n};\nexport const searchSlice = createSlice({\n  name: \"search\",\n  initialState,\n  reducers: {\n    setSearchWordTK: (state, action) => {\n      state.searchWord = action.payload;\n    },\n    setOrderCommandTK: (state, action) => {\n      state.orderCommand = action.payload;\n    }\n  }\n});\nexport const {\n  setSearchWordTK,\n  setOrderCommandTK\n} = searchSlice.actions;\nexport const selectWord = state => state.searchState.searchWord;\nexport default searchSlice.reducer;","map":{"version":3,"sources":["/Users/jun/Desktop/Front-Git/front-end/src/redux/dataSlice.ts"],"names":["createSlice","initialState","searchWord","orderCommand","searchSlice","name","reducers","setSearchWordTK","state","action","payload","setOrderCommandTK","actions","selectWord","searchState","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,IADO;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAGJ,WAAW,CAAC;AACrCK,EAAAA,IAAI,EAAE,QAD+B;AAErCJ,EAAAA,YAFqC;AAGrCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AACzDD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACD,KAHO;AAIRC,IAAAA,iBAAiB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA0C;AAC3DD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;AACD;AANO;AAH2B,CAAD,CAA/B;AAaP,OAAO,MAAM;AAAEH,EAAAA,eAAF;AAAmBI,EAAAA;AAAnB,IAAyCP,WAAW,CAACQ,OAA3D;AAEP,OAAO,MAAMC,UAAU,GAAIL,KAAD,IAAsBA,KAAK,CAACM,WAAN,CAAkBZ,UAA3D;AAEP,eAAeE,WAAW,CAACW,OAA3B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport type { RootState } from \"../store\";\n\ninterface searchWordState {\n  searchWord: string;\n  orderCommand: string;\n}\n\nconst initialState = {\n  searchWord: \"추천\",\n  orderCommand: \"date\",\n} as searchWordState;\n\nexport const searchSlice = createSlice({\n  name: \"search\",\n  initialState,\n  reducers: {\n    setSearchWordTK: (state, action: PayloadAction<string>) => {\n      state.searchWord = action.payload;\n    },\n    setOrderCommandTK: (state, action: PayloadAction<string>) => {\n      state.orderCommand = action.payload;\n    },\n  },\n});\n\nexport const { setSearchWordTK, setOrderCommandTK } = searchSlice.actions;\n\nexport const selectWord = (state: RootState) => state.searchState.searchWord;\n\nexport default searchSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}