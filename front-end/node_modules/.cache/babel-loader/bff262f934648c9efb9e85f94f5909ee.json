{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/Front-Git/front-end/src/components/Pagination.tsx\";\nimport styled, { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Pagination(_ref) {\n  let {\n    setCurrPageNum,\n    totalPageNum,\n    currPageNum\n  } = _ref;\n\n  const handlePageNum = pageNum => {\n    setCurrPageNum(pageNum);\n  };\n\n  const handleBeforePage = () => {\n    if (currPageNum > 0) {\n      setCurrPageNum(pre => pre -= 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currPageNum < totalPageNum.length - 1) {\n      setCurrPageNum(pre => pre += 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageNationContainer, {\n    children: totalPageNum.length !== 0 && /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"Page navigation example\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination black\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#\",\n            \"aria-label\": \"Previous\",\n            onClick: () => handleBeforePage(),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xAB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), totalPageNum.map((el, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"page-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"page-link\",\n              onClick: () => handlePageNum(el),\n              children: el + 1\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#\",\n            \"aria-label\": \"Next\",\n            onClick: () => handleNextPage(),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xBB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Pagination;\nexport default Pagination;\nconst PaginationContianer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > ul {\n    padding: 0;\n  }\n`;\nconst PageList = styled.div`\n  list-style-type: none;\n  display: inline;\n  padding: 0 15px;\n  border-right: 1px solid black;\n  cursor: pointer;\n  outline: 0 none;\n  &:nth-child(2) {\n    border-left: 1px solid black;\n  }\n\n  ${props => props.currPageColor ? css`\n          color: rgb(247, 0, 0);\n          font-weight: 600;\n        ` : \"#000000\"};\n\n  &:hover {\n    color: rgb(247, 0, 0);\n  }\n`;\nconst Navi = styled.span`\n  padding: 0 10px;\n  cursor: pointer;\n\n  &:hover {\n    color: rgb(247, 0, 0);\n  }\n`;\nconst PageNationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`; //pagenation 로직\n// 데이터를 100개를 받아왔다.\n// 받아온 데이어 100개를 15개씩 나눠서 렌더링 하려함\n// 100/15  = ceil 사용해서 반올림 7페이지 있음\n// 처음부터 6페이지까지 15개씩 렌더링\n// 1페이지가 됐을때 index 가 0부터 14까지 렌더링//\n// firstIdex 가 0 이여야하고 LastIndex 가 14 여야함.\n// 2페이지일때는\n// firstIdex 가 15 여야하고 LastIndex 가 29 여야함.\n// 3페이지일때\n// firstIdex 가 30 여야하고 lastIdex 가 49 여야함.\n// 페이지가 변경될때마다 firstIdex 는 firstIdex*=15 여야함.\n// lastIdex 는 lastIdex = firstidex+perpage-1;\n// 마지막 7페이지에는 5개가 렌더링됨\n\n_c2 = PageNationContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Pagination\");\n$RefreshReg$(_c2, \"PageNationContainer\");","map":{"version":3,"sources":["/Users/jun/Desktop/Front-Git/front-end/src/components/Pagination.tsx"],"names":["styled","css","Pagination","setCurrPageNum","totalPageNum","currPageNum","handlePageNum","pageNum","handleBeforePage","pre","handleNextPage","length","map","el","idx","PaginationContianer","div","PageList","props","currPageColor","Navi","span","PageNationContainer"],"mappings":"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","sourcesContent":["import styled, { css } from \"styled-components\";\n\ninterface DataType {\n  setCurrPageNum: React.Dispatch<React.SetStateAction<number>>;\n  totalPageNum: Array<number>;\n  currPageNum: number;\n}\n\nfunction Pagination({ setCurrPageNum, totalPageNum, currPageNum }: DataType) {\n  const handlePageNum = (pageNum: number) => {\n    setCurrPageNum(pageNum);\n  };\n\n  const handleBeforePage = () => {\n    if (currPageNum > 0) {\n      setCurrPageNum((pre) => (pre -= 1));\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currPageNum < totalPageNum.length - 1) {\n      setCurrPageNum((pre) => (pre += 1));\n    }\n  };\n\n  return (\n    <PageNationContainer>\n      {/* {totalPageNum.length !== 0 && (\n        <PaginationContianer>\n          <ul>\n            <Navi onClick={() => handleBeforePage()}>이전</Navi>\n            {totalPageNum.map((el, idx) => {\n              return (\n                <PageList\n                  key={idx}\n                  onClick={() => handlePageNum(el)}\n                  currPageColor={currPageNum === idx ? true : false}\n                >\n                  {el + 1}\n                </PageList>\n              );\n            })}\n            <Navi onClick={() => handleNextPage()}>다음</Navi>\n          </ul>\n        </PaginationContianer>\n      )} */}\n      {totalPageNum.length !== 0 && (\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination black\">\n            <li className=\"page-item\">\n              <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={() => handleBeforePage()}>\n                <span aria-hidden=\"true\">&laquo;</span>\n              </a>\n            </li>\n            {totalPageNum.map((el, idx) => {\n              return (\n                <li className=\"page-item\">\n                  <a key={idx} className=\"page-link\" onClick={() => handlePageNum(el)}>\n                    {el + 1}\n                  </a>\n                </li>\n              );\n            })}\n\n            <li className=\"page-item\">\n              <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={() => handleNextPage()}>\n                <span aria-hidden=\"true\">&raquo;</span>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </PageNationContainer>\n  );\n}\n\nexport default Pagination;\n\nconst PaginationContianer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  > ul {\n    padding: 0;\n  }\n`;\n\nconst PageList = styled.div<{ currPageColor: boolean }>`\n  list-style-type: none;\n  display: inline;\n  padding: 0 15px;\n  border-right: 1px solid black;\n  cursor: pointer;\n  outline: 0 none;\n  &:nth-child(2) {\n    border-left: 1px solid black;\n  }\n\n  ${(props) =>\n    props.currPageColor\n      ? css`\n          color: rgb(247, 0, 0);\n          font-weight: 600;\n        `\n      : \"#000000\"};\n\n  &:hover {\n    color: rgb(247, 0, 0);\n  }\n`;\n\nconst Navi = styled.span`\n  padding: 0 10px;\n  cursor: pointer;\n\n  &:hover {\n    color: rgb(247, 0, 0);\n  }\n`;\n\nconst PageNationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n//pagenation 로직\n// 데이터를 100개를 받아왔다.\n// 받아온 데이어 100개를 15개씩 나눠서 렌더링 하려함\n\n// 100/15  = ceil 사용해서 반올림 7페이지 있음\n// 처음부터 6페이지까지 15개씩 렌더링\n\n// 1페이지가 됐을때 index 가 0부터 14까지 렌더링//\n// firstIdex 가 0 이여야하고 LastIndex 가 14 여야함.\n\n// 2페이지일때는\n// firstIdex 가 15 여야하고 LastIndex 가 29 여야함.\n\n// 3페이지일때\n// firstIdex 가 30 여야하고 lastIdex 가 49 여야함.\n\n// 페이지가 변경될때마다 firstIdex 는 firstIdex*=15 여야함.\n// lastIdex 는 lastIdex = firstidex+perpage-1;\n\n// 마지막 7페이지에는 5개가 렌더링됨\n"]},"metadata":{},"sourceType":"module"}