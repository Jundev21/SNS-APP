{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/Front-Git/bunjang/src/components/searchBarComponents/AutoList.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AutoList(_ref) {\n  let {\n    autoComplete,\n    handleTagName,\n    searchWord\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: autoComplete.length !== 0 ? /*#__PURE__*/_jsxDEV(SearchingContainer, {\n      children: autoComplete.map((el, idx) => {\n        return /*#__PURE__*/_jsxDEV(TagName, {\n          onClick: () => handleTagName(el.name),\n          children: el.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SearchingContainer, {\n      onClick: () => handleTagName(searchWord),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC0C1\\uD488\\xA0 \", /*#__PURE__*/_jsxDEV(TypeSearching, {\n          children: [\" \\\"\", searchWord, \"\\\" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }, this), \" \\xA0 \\uAC80\\uC0C9\\uD558\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = AutoList;\nexport default AutoList;\nconst TagName = styled.div`\n  padding: 3px 15px;\n`;\n_c2 = TagName;\nconst TypeSearching = styled.span`\n  color: rgb(247, 0, 0);\n  cursor: pointer;\n  &:hover {\n    background-color: rgb(240, 240, 235);\n  }\n`;\n_c3 = TypeSearching;\nconst SearchingContainer = styled.div`\n  height: 100%;\n  > div {\n    padding: 10px 10px;\n    cursor: pointer;\n    &:hover {\n      background-color: rgb(240, 240, 235);\n    }\n  }\n`;\n_c4 = SearchingContainer;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AutoList\");\n$RefreshReg$(_c2, \"TagName\");\n$RefreshReg$(_c3, \"TypeSearching\");\n$RefreshReg$(_c4, \"SearchingContainer\");","map":{"version":3,"sources":["/Users/jun/Desktop/Front-Git/bunjang/src/components/searchBarComponents/AutoList.tsx"],"names":["React","styled","AutoList","autoComplete","handleTagName","searchWord","length","map","el","idx","name","TagName","div","TypeSearching","span","SearchingContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAaA,SAASC,QAAT,OAA6E;AAAA,MAA3D;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,GAA2D;AAC3E,sBACE;AAAA,cACGF,YAAY,CAACG,MAAb,KAAwB,CAAxB,gBACC,QAAC,kBAAD;AAAA,gBACGH,YAAY,CAACI,GAAb,CAAiB,CAACC,EAAD,EAAeC,GAAf,KAA+B;AAC/C,4BACE,QAAC,OAAD;AAAmB,UAAA,OAAO,EAAE,MAAML,aAAa,CAACI,EAAE,CAACE,IAAJ,CAA/C;AAAA,oBACGF,EAAE,CAACE;AADN,WAAcD,GAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YADD,gBAWC,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAE,MAAML,aAAa,CAACC,UAAD,CAAhD;AAAA,6BACE;AAAA,qDACW,QAAC,aAAD;AAAA,4BAAkBA,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAZJ,mBADF;AAsBD;;KAvBQH,Q;AAyBT,eAAeA,QAAf;AAEA,MAAMS,OAAO,GAAGV,MAAM,CAACW,GAAI;AAC3B;AACA,CAFA;MAAMD,O;AAIN,MAAME,aAAa,GAAGZ,MAAM,CAACa,IAAK;AAClC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,a;AAQN,MAAME,kBAAkB,GAAGd,MAAM,CAACW,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMG,kB","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface AutoCompType {\n  autoComplete: {\n    name: string;\n  }[];\n  handleTagName: (word: string) => void;\n  searchWord: string;\n}\n\ninterface DataType {\n  name: string;\n}\nfunction AutoList({ autoComplete, handleTagName, searchWord }: AutoCompType) {\n  return (\n    <>\n      {autoComplete.length !== 0 ? (\n        <SearchingContainer>\n          {autoComplete.map((el: DataType, idx: number) => {\n            return (\n              <TagName key={idx} onClick={() => handleTagName(el.name)}>\n                {el.name}\n              </TagName>\n            );\n          })}\n        </SearchingContainer>\n      ) : (\n        <SearchingContainer onClick={() => handleTagName(searchWord)}>\n          <div>\n            상품&nbsp; <TypeSearching> \"{searchWord}\" </TypeSearching> &nbsp;\n            검색하기\n          </div>\n        </SearchingContainer>\n      )}\n    </>\n  );\n}\n\nexport default AutoList;\n\nconst TagName = styled.div`\n  padding: 3px 15px;\n`;\n\nconst TypeSearching = styled.span`\n  color: rgb(247, 0, 0);\n  cursor: pointer;\n  &:hover {\n    background-color: rgb(240, 240, 235);\n  }\n`;\n\nconst SearchingContainer = styled.div`\n  height: 100%;\n  > div {\n    padding: 10px 10px;\n    cursor: pointer;\n    &:hover {\n      background-color: rgb(240, 240, 235);\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}